{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setrecipes","search","setsearch","query","setquery","useEffect","getrecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2PA+BeA,EA1BF,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,MAAQC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAEpC,OAEI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,mCAAON,EAAP,OACA,6BAEKG,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAIxB,oBAAGL,UAAWC,IAAMJ,SAApB,cAA+B,+CAA/B,IAA2DA,EAA3D,OAEA,qBAAKG,UAAWC,IAAMH,MAAOQ,IAAKR,EAAOS,IAAI,SCwE1CC,G,MAxFJ,WAEX,IAIA,EAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAGA,EAAyBJ,mBAAS,WAAlC,mBAAOK,EAAP,KAAcC,EAAd,KAGAC,qBAAY,WAEVC,MAIC,CAACH,IAGJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEAEKC,MAAM,mCAAD,OAAoCL,EAApC,mBAvBf,WAuBe,oBArB7B,qCAmBmB,cAEXM,EAFW,gBAGGA,EAASC,OAHZ,OAGXC,EAHW,OAIjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MALA,2CAAH,qDA6Bd,OACE,sBAAKvB,UAAU,MAAf,UACA,uBAAM0B,SAXQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAQmBb,UAAU,cAArC,UACA,uBAAOA,UAAU,aAAa6B,KAAK,OAAQC,MAAOlB,EAAQmB,SApB1C,SAAAJ,GAElBd,EAAUc,EAAEK,OAAOF,UAmBjB,wBAAU9B,UAAU,gBAAgB6B,KAAK,SAAzC,wBAKA,sBAAK7B,UAAU,UAAf,UAICU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEAN,MAAQM,EAAOA,OAAO+B,MACrBpC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJvBG,EAAOA,OAAO+B,UANrB,YCrDWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,SAAW,4B","file":"static/js/main.854909c9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport style from './recipe.module.css';\r\n\r\n\r\nconst Recipe=({title , calories, image, ingredients }) => {\r\n\r\n    return (\r\n\r\n        <div className={style.recipe}>\r\n            <h1 > {title} </h1>\r\n            <ol>\r\n\r\n                {ingredients.map(ingredient =>(\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n\r\n            <p className={style.calories}> <strong>Calories:</strong> {calories} </p>\r\n\r\n            <img className={style.image} src={image} alt=\"\"/>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Recipe;\r\n","import React,{useEffect, useState}  from \"react\"; \nimport Recipe from \"./Recipe\";\nimport './App.css';\n\nconst App= () => {\n\nconst APP_ID= 'd39c702a';\nconst APP_KEY= \n\"eccebe1f52170d46e3b2587db0443424\"\t;\n\nconst [recipes, setrecipes]= useState([]);\n\nconst [search,setsearch]= useState('');\n\n\nconst [query, setquery]= useState('chicken');\n\n\nuseEffect(  () => {\n\n  getrecipes();\n  \n\n\n}, [query]);\n\n\nconst getrecipes = async () => {\n\n  const response= await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n  const data =  await response.json();\n  setrecipes(data.hits);\n  console.log(data.hits);\n\n\n  \n};\n\n\nconst updatesearch= e => {\n\n  setsearch(e.target.value);\n  \n\n}\n\n\nconst getsearch = e => {\n  e.preventDefault();\n  setquery(search);\n  setsearch('');\n}\n\n\n\n\n  return(\n    <div className=\"App\">\n    <form onSubmit={getsearch} className=\"search-form\">\n    <input className=\"search-bar\" type=\"text\"  value={search} onChange={updatesearch} />\n    <button   className=\"search-button\" type=\"submit\" > Search</button>\n\n\n    </form>\n\n    <div className=\"recipes\"> \n\n    \n\n    {recipes.map(recipe =>(\n      <Recipe \n      key={recipe.recipe.label}\n      title={ recipe.recipe.label}\n       calories={recipe.recipe.calories} \n       image={recipe.recipe.image}\n       ingredients={recipe.recipe.ingredients}\n       \n       />\n\n\n    ))};\n\n</div>\n\n   \n    \n    </div>\n\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__389-e\",\"image\":\"recipe_image__2ezc2\",\"calories\":\"recipe_calories__1n6K8\"};"],"sourceRoot":""}